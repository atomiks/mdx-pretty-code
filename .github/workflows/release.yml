name: Release

on:
  push:
    branches: ['main', 'next']

defaults:
  run:
    shell: bash

concurrency: ${{ github.workflow }}-${{ github.ref }}

env:
  ACTIONS_RUNNER_DEBUG: true
  NEXT_TELEMETRY_DISABLED: '1'
  ASTRO_TELEMETRY_DISABLED: '1'
  NODE_OPTIONS: '--no-warnings'
  FORCE_COLOR: 1

jobs:
  release:
    name: 'Release'
    runs-on: ['ubuntu-latest']
    permissions:
      contents: write
      id-token: write
    steps:
      - name: 'Checkout Repository'
        uses: actions/checkout@v4

      - name: 'Get pnpm Version'
        id: pnpm-version
        run: |
          PNPM_VERSION=$(cat package.json | jq --raw-output '.packageManager' | awk -F'@' '{print $2}')
          echo "PNPM_VERSION=$PNPM_VERSION" >> $GITHUB_OUTPUT

      - name: 'Setup pnpm'
        uses: pnpm/action-setup@v3
        with:
          version: ${{ steps.pnpm-version.outputs.PNPM_VERSION }}

      - name: 'Setup Node.js'
        uses: actions/setup-node@v4
        with:
          cache: 'pnpm'
          node-version: 'lts/*'
          registry-url: 'https://registry.npmjs.org'

      - name: 'Install Dependencies'
        run: pnpm install --frozen-lockfile

      - name: 'Build Packages'
        run: pnpm build

      - name: Create Release Pull Request or Publish
        id: changesets
        uses: changesets/action@v1
        with:
          # Note: pnpm install after versioning is necessary to refresh lockfile
          version: pnpm dlx bun@latest ./scripts/changeset-update-version.ts
          publish: pnpm exec changeset publish
          commit: "[ci] release"
          title: "[ci] release"
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
